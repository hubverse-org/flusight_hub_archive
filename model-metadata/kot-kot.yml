team_abbr: "kot"
model_abbr: "kot"
model_contributors: [
  {
    "name": "Evan Ray",
    "affiliation": "University of Massachusetts Amherst",
    "email": "evan.l.ray@gmail.com"
  },
  {
    "name": "Nicholas Reich",
    "affiliation": "University of Massachusetts Amherst",
    "email": "nick@schoolph.umass.edu"
  },
  {
    "name": "Alexandria Brown",
    "affiliation": "University of Massachusetts Amherst",
    "email": "acbro0@schoolph.umass.edu"
  },
  {
    "name": "Graham Gibson",
    "affiliation": "University of Massachusetts Amherst",
    "email": "gcgibson@umass.edu"
  }
]
methods_long: >
    Team Kernel of Truth is submitting predictions from an ensemble model.  
    The final predictive distributions are obtained as a weighted average of 
    predictions from three component models:
    1) A fixed model using either Kernel Density Estimation (for season onset 
    week, season peak week, and season peak incidence), or a GAM (for 
    predictions of incidence at horizons 1 to 4 weeks).  The predictions from 
    this model do not change as new data are observed over the course of the 
    season (though the predictions for incidence in individual weeks do depend 
    on the week being predicted), and can be interpreted as a representation of
    'everything that we have seen in the past'.  A separate model fit is 
    obtained for each region.
    2) A model combining Kernel Conditional Density Estimation (KCDE) and 
    copulas.  KCDE is used to obtain separate predictive densities for each 
    future week in the season.  In order to predict seasonal quantities (onset, 
    peak timing, and peak incidence), we use a copula to model dependence among 
    those individual predicitive densities, thereby obtaining a joint 
    predicitive density for incidence in all future weeks.  Predicitive 
    densities for the seasonal quantities can be obtained as appropriate 
    integrals of this joint density.  A separate model fit is obtained for each 
    region.
    3) A SARIMA model.  This model is fit to seasonally differenced 
    log(weighted_ili) using a stepwise procedure to select the model 
    specification.  A separate model fit is obtained for each region.
    The final predictions are obtained as a linear combination of the 
    predictions from these component models.  The model weights depend on the 
    week of the season in which the predictions are made.  We represent these 
    weights as the softmax transformation of latent functions 
    rho_ilt(season week) where i = 1, ..., 3 indexes the component model, 
    l = 1, ..., 11 indexes the location (national or region 1 through 10), 
    and t = 1, ..., 7 indexes the prediction target.  
    We estimate those latent functions rho_ilt via gradient tree boosting, 
    optimizing leave-one-season-out crossvalidated log scores (using the 
    definition of log scores specified for this competition).
ensemble_of_models: true

